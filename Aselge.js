{
  "project": "love_invite",
  "files": {
    "index.html": "<!DOCTYPE html>\n<html lang=\"kk\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>üíñ –®–∞“õ—ã—Ä—Ç—É</title>\n  <link rel=\"stylesheet\" href=\"styles/love.css\">\n</head>\n<body>\n  <canvas id=\"heart\"></canvas>\n\n  <div class=\"invite-text\">\n    <h2>“ö“±—Ä–º–µ—Ç—Ç—ñ –ê—Å–µ–ª —Ö–∞–Ω—ã–º,</h2>\n    <p>\n      31 “õ–∞–∑–∞–Ω –∫“Ø–Ω—ñ –±—ñ—Ä–≥–µ <br>\n      <strong>Almaty Museum of Arts</strong> –º–µ–∫–µ–Ω–∂–∞–π—ã–Ω–¥–∞ <br>\n      <a href=\"https://go.2gis.com/0Rok2\" target=\"_blank\">https://go.2gis.com/0Rok2</a><br><br>\n      –ñ–µ–∫–µ –∫–µ–∑–¥–µ—Å—É. –°—Ç–∏–ª—ñ ‚Äî <em>–Ω”ô–∑—ñ–∫ –∂”ô–Ω–µ –∂—ã–ª—ã –∫”©“£—ñ–ª–º–µ–Ω üíê</em>\n    </p>\n  </div>\n\n  <audio id=\"backgroundMusic\" loop>\n    <source src=\"assets/blue.mp3\" type=\"audio/mpeg\">\n  </audio>\n\n  <script src=\"script/love.js\"></script>\n</body>\n</html>",
    "styles/love.css": "canvas {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.3);\n}\n\n.invite-text {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  color: #f3f8ff;\n  font-family: 'Georgia', serif;\n  background: rgba(0, 0, 0, 0.3);\n  padding: 30px 40px;\n  border-radius: 20px;\n  backdrop-filter: blur(6px);\n  animation: fadeIn 3s ease-in-out;\n  box-shadow: 0 0 20px rgba(255, 255, 255, 0.2);\n}\n\n.invite-text h2 {\n  font-size: 2em;\n  color: #b3e5ff;\n  margin-bottom: 10px;\n}\n\n.invite-text p {\n  font-size: 1.2em;\n  line-height: 1.6;\n}\n\n.invite-text a {\n  color: #aee7ff;\n  text-decoration: none;\n  font-weight: bold;\n}\n\n.invite-text a:hover {\n  text-decoration: underline;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translate(-50%, -40%); }\n  to { opacity: 1; transform: translate(-50%, -50%); }\n}",
    "script/love.js": "window.requestAnimationFrame = window.__requestAnimationFrame || window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function () { return function (callback, element) { var lastTime = element.__lastTime || 0; var currTime = Date.now(); var timeToCall = Math.max(1, 33 - (currTime - lastTime)); window.setTimeout(callback, timeToCall); element.__lastTime = currTime + timeToCall; }; }();\n\nwindow.isDevice = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test((navigator.userAgent || navigator.vendor || window.opera).toLowerCase());\n\nvar loaded = false;\n\nfunction init() {\n  if (loaded) return;\n  loaded = true;\n  var mobile = window.isDevice;\n  var canvas = document.getElementById('heart');\n  var ctx = canvas.getContext('2d');\n\n  function resizeCanvas() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n  }\n  resizeCanvas();\n  window.addEventListener('resize', resizeCanvas);\n\n  var width = canvas.width;\n  var height = canvas.height;\n  var rand = Math.random;\n\n  ctx.fillStyle = 'rgba(0,0,0,1)';\n  ctx.fillRect(0, 0, width, height);\n\n  function drawText() {\n    var fontSize = Math.min(width, height) / 15;\n    ctx.font = fontSize + 'px Arial';\n    ctx.fillStyle = 'lightblue';\n    ctx.textAlign = 'center';\n    ctx.fillText('I love you', width / 2, height * 0.8);\n  }\n\n  function heartPosition(rad) {\n    return [Math.pow(Math.sin(rad), 3), -(15 * Math.cos(rad) - 5 * Math.cos(2 * rad) - 2 * Math.cos(3 * rad) - Math.cos(4 * rad))];\n  }\n\n  function scaleAndTranslate(pos, sx, sy, dx, dy) {\n    return [dx + pos[0] * sx, dy + pos[1] * sy];\n  }\n\n  var traceCount = mobile ? 15 : 40;\n  var pointsOrigin = [];\n  var dr = mobile ? 0.3 : 0.1;\n  var scaleBase = Math.min(width, height) / 6;\n\n  for (var i = 0; i < Math.PI * 2; i += dr) pointsOrigin.push(scaleAndTranslate(heartPosition(i), scaleBase, scaleBase * 0.06, 0, 0));\n  for (var i = 0; i < Math.PI * 2; i += dr) pointsOrigin.push(scaleAndTranslate(heartPosition(i), scaleBase * 0.8, scaleBase * 0.05, 0, 0));\n  for (var i = 0; i < Math.PI * 2; i += dr) pointsOrigin.push(scaleAndTranslate(heartPosition(i), scaleBase * 0.6, scaleBase * 0.035, 0, 0));\n\n  var heartPointsCount = pointsOrigin.length;\n  var targetPoints = [];\n\n  function pulse(kx, ky) {\n    for (var i = 0; i < pointsOrigin.length; i++) {\n      targetPoints[i] = [kx * pointsOrigin[i][0] + width / 2, ky * pointsOrigin[i][1] + height / 2.5];\n    }\n  }\n\n  var e = [];\n  for (var i = 0; i < heartPointsCount; i++) {\n    var x = rand() * width;\n    var y = rand() * height;\n    e[i] = {\n      vx: 0,\n      vy: 0,\n      R: 2,\n      speed: rand() + 4,\n      q: ~~(rand() * heartPointsCount),\n      D: 2 * (i % 2) - 1,\n      force: 0.2 * rand() + 0.7,\n      f: 'rgba(51, 204, 255, 0.7)',\n      trace: Array.from({ length: traceCount }, () => ({ x, y }))\n    };\n  }\n\n  var config = { traceK: 0.4, timeDelta: 0.6 };\n  var time = 0;\n\n  function loop() {\n    var n = -Math.cos(time);\n    pulse((1 + n) * 0.5, (1 + n) * 0.5);\n    time += (Math.sin(time) < 0 ? 9 : n > 0.8 ? 0.2 : 1) * config.timeDelta;\n\n    ctx.fillStyle = 'rgba(0,0,0,.1)';\n    ctx.fillRect(0, 0, width, height);\n\n    for (var i = e.length; i--;) {\n      var u = e[i];\n      var q = targetPoints[u.q];\n      var dx = u.trace[0].x - q[0];\n      var dy = u.trace[0].y - q[1];\n      var length = Math.sqrt(dx * dx + dy * dy);\n\n      if (length < 10) {\n        if (rand() > 0.95) {\n          u.q = ~~(rand() * heartPointsCount);\n        } else {\n          if (rand() > 0.99) u.D *= -1;\n          u.q = (u.q + u.D) % heartPointsCount;\n          if (u.q < 0) u.q += heartPointsCount;\n        }\n      }\n\n      u.vx += (-dx / length) * u.speed;\n      u.vy += (-dy / length) * u.speed;\n      u.trace[0].x += u.vx;\n      u.trace[0].y += u.vy;\n      u.vx *= u.force;\n      u.vy *= u.force;\n\n      for (var k = 0; k < u.trace.length - 1; k++) {\n        var T = u.trace[k];\n        var N = u.trace[k + 1];\n        N.x -= config.traceK * (N.x - T.x);\n        N.y -= config.traceK * (N.y - T.y);\n      }\n\n      ctx.fillStyle = u.f;\n      u.trace.forEach((t) => ctx.fillRect(t.x, t.y, 1, 1));\n    }\n\n    drawText();\n    window.requestAnimationFrame(loop, canvas);\n  }\n\n  loop();\n}\n\ndocument.addEventListener('DOMContentLoaded', init);"
  }
}
